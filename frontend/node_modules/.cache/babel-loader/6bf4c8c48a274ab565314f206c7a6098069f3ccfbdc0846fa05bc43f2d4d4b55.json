{"ast":null,"code":"var _jsxFileName = \"/Users/jamesfletty/finalbook/ai_novel_app/frontend/src/pages/ChapterEditor.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { Container, Typography, Box, Paper, TextField, Button, Grid, Card, CardContent, Chip, Alert, CircularProgress, Divider } from '@mui/material';\nimport { Save, AutoAwesome, ArrowBack, Edit } from '@mui/icons-material';\nimport { storyApi, generationApi } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChapterEditor = () => {\n  _s();\n  const {\n    id,\n    chapterNumber\n  } = useParams();\n  const navigate = useNavigate();\n  const [story, setStory] = useState(null);\n  const [chapter, setChapter] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [editedContent, setEditedContent] = useState('');\n  useEffect(() => {\n    if (id && chapterNumber) {\n      loadChapterData(parseInt(id), parseInt(chapterNumber));\n    }\n  }, [id, chapterNumber]);\n  const loadChapterData = async (storyId, chapterNum) => {\n    try {\n      const [storyData, chapterData] = await Promise.all([storyApi.getStory(storyId), storyApi.getChapter(storyId, chapterNum)]);\n      setStory(storyData);\n      setChapter(chapterData);\n      setEditedContent(chapterData.content || '');\n    } catch (error) {\n      console.error('Failed to load chapter data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSave = async () => {\n    if (!story || !chapter) return;\n    setSaving(true);\n    try {\n      const updatedChapter = await storyApi.updateChapter(story.story_id, chapter.number, {\n        content: editedContent\n      });\n      setChapter(updatedChapter);\n      setEditMode(false);\n    } catch (error) {\n      console.error('Failed to save chapter:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n  const handleGenerate = async () => {\n    if (!story || !chapter) return;\n    setGenerating(true);\n    try {\n      const result = await generationApi.generateChapter(story.story_id, chapter.number);\n      if (result.success) {\n        // Reload chapter data\n        await loadChapterData(story.story_id, chapter.number);\n      }\n    } catch (error) {\n      console.error('Failed to generate chapter:', error);\n    } finally {\n      setGenerating(false);\n    }\n  };\n  const wordCount = editedContent ? editedContent.split(/\\s+/).filter(word => word.length > 0).length : 0;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          display: 'flex',\n          justifyContent: 'center',\n          mt: 4\n        },\n        children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this);\n  }\n  if (!story || !chapter) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        severity: \"error\",\n        sx: {\n          mt: 4\n        },\n        children: \"Chapter not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"lg\",\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mt: 4,\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          mb: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          startIcon: /*#__PURE__*/_jsxDEV(ArrowBack, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 24\n          }, this),\n          onClick: () => navigate(`/stories/${story.story_id}`),\n          sx: {\n            mb: 2\n          },\n          children: \"Back to Story\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h4\",\n          component: \"h1\",\n          gutterBottom: true,\n          children: [\"Chapter \", chapter.number, \": \", chapter.title]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            gap: 1,\n            mb: 2\n          },\n          children: [chapter.is_generated && /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"AI Generated\",\n            color: \"success\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), chapter.is_approved && /*#__PURE__*/_jsxDEV(Chip, {\n            label: \"Approved\",\n            color: \"primary\",\n            size: \"small\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          sx: {\n            mb: 3\n          },\n          children: chapter.summary\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 9,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            sx: {\n              p: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 3\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                children: [\"Content (\", wordCount, \" words)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  gap: 1\n                },\n                children: [!chapter.content && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"contained\",\n                  startIcon: /*#__PURE__*/_jsxDEV(AutoAwesome, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 34\n                  }, this),\n                  onClick: handleGenerate,\n                  disabled: generating,\n                  children: generating ? 'Generating...' : 'Generate with AI'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this), chapter.content && !editMode && /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"outlined\",\n                  startIcon: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 34\n                  }, this),\n                  onClick: () => setEditMode(true),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 21\n                }, this), editMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"outlined\",\n                    onClick: () => {\n                      setEditMode(false);\n                      setEditedContent(chapter.content || '');\n                    },\n                    children: \"Cancel\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"contained\",\n                    startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 36\n                    }, this),\n                    onClick: handleSave,\n                    disabled: saving,\n                    children: saving ? 'Saving...' : 'Save'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {\n              sx: {\n                mb: 3\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 15\n            }, this), !chapter.content && !generating ? /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                textAlign: 'center',\n                py: 8\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                color: \"text.secondary\",\n                gutterBottom: true,\n                children: \"No content yet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.secondary\",\n                sx: {\n                  mb: 3\n                },\n                children: \"Generate AI content or start writing manually\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                startIcon: /*#__PURE__*/_jsxDEV(AutoAwesome, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 32\n                }, this),\n                onClick: handleGenerate,\n                disabled: generating,\n                children: \"Generate with AI\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 216,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this) : editMode ? /*#__PURE__*/_jsxDEV(TextField, {\n              fullWidth: true,\n              multiline: true,\n              rows: 20,\n              value: editedContent,\n              onChange: e => setEditedContent(e.target.value),\n              placeholder: \"Start writing your chapter...\",\n              variant: \"outlined\",\n              sx: {\n                '& .MuiOutlinedInput-root': {\n                  fontFamily: '\"Georgia\", serif',\n                  fontSize: '16px',\n                  lineHeight: 1.6\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                fontFamily: '\"Georgia\", serif',\n                fontSize: '16px',\n                lineHeight: 1.8,\n                whiteSpace: 'pre-wrap',\n                minHeight: '400px'\n              },\n              children: chapter.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(CardContent, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                gutterBottom: true,\n                children: \"Chapter Info\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: \"Word Count\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: chapter.word_count || wordCount\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: chapter.is_generated ? 'Generated' : 'Draft'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mb: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: \"Last Updated\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: chapter.updated_at ? new Date(chapter.updated_at).toLocaleDateString() : 'Never'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(ChapterEditor, \"NTVv5oQBGTFpsKhcJ2L7AI43L7M=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ChapterEditor;\nexport default ChapterEditor;\nvar _c;\n$RefreshReg$(_c, \"ChapterEditor\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Container","Typography","Box","Paper","TextField","Button","Grid","Card","CardContent","Chip","Alert","CircularProgress","Divider","Save","AutoAwesome","ArrowBack","Edit","storyApi","generationApi","jsxDEV","_jsxDEV","Fragment","_Fragment","ChapterEditor","_s","id","chapterNumber","navigate","story","setStory","chapter","setChapter","loading","setLoading","saving","setSaving","generating","setGenerating","editMode","setEditMode","editedContent","setEditedContent","loadChapterData","parseInt","storyId","chapterNum","storyData","chapterData","Promise","all","getStory","getChapter","content","error","console","handleSave","updatedChapter","updateChapter","story_id","number","handleGenerate","result","generateChapter","success","wordCount","split","filter","word","length","children","sx","display","justifyContent","mt","fileName","_jsxFileName","lineNumber","columnNumber","severity","maxWidth","mb","startIcon","onClick","variant","component","gutterBottom","title","gap","is_generated","label","color","size","is_approved","summary","container","spacing","item","xs","md","p","alignItems","disabled","textAlign","py","fullWidth","multiline","rows","value","onChange","e","target","placeholder","fontFamily","fontSize","lineHeight","whiteSpace","minHeight","word_count","updated_at","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/jamesfletty/finalbook/ai_novel_app/frontend/src/pages/ChapterEditor.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport {\n  Container,\n  Typography,\n  Box,\n  Paper,\n  TextField,\n  Button,\n  Grid,\n  Card,\n  CardContent,\n  Chip,\n  Alert,\n  CircularProgress,\n  Divider,\n} from '@mui/material';\nimport {\n  Save,\n  AutoAwesome,\n  ArrowBack,\n  Edit,\n  Visibility,\n} from '@mui/icons-material';\nimport { storyApi, generationApi, Story, Chapter } from '../services/api';\n\nconst ChapterEditor: React.FC = () => {\n  const { id, chapterNumber } = useParams<{ id: string; chapterNumber: string }>();\n  const navigate = useNavigate();\n  const [story, setStory] = useState<Story | null>(null);\n  const [chapter, setChapter] = useState<Chapter | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [saving, setSaving] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [editMode, setEditMode] = useState(false);\n  const [editedContent, setEditedContent] = useState('');\n\n  useEffect(() => {\n    if (id && chapterNumber) {\n      loadChapterData(parseInt(id), parseInt(chapterNumber));\n    }\n  }, [id, chapterNumber]);\n\n  const loadChapterData = async (storyId: number, chapterNum: number) => {\n    try {\n      const [storyData, chapterData] = await Promise.all([\n        storyApi.getStory(storyId),\n        storyApi.getChapter(storyId, chapterNum),\n      ]);\n      setStory(storyData);\n      setChapter(chapterData);\n      setEditedContent(chapterData.content || '');\n    } catch (error) {\n      console.error('Failed to load chapter data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSave = async () => {\n    if (!story || !chapter) return;\n    \n    setSaving(true);\n    try {\n      const updatedChapter = await storyApi.updateChapter(\n        story.story_id,\n        chapter.number,\n        { content: editedContent }\n      );\n      setChapter(updatedChapter);\n      setEditMode(false);\n    } catch (error) {\n      console.error('Failed to save chapter:', error);\n    } finally {\n      setSaving(false);\n    }\n  };\n\n  const handleGenerate = async () => {\n    if (!story || !chapter) return;\n    \n    setGenerating(true);\n    try {\n      const result = await generationApi.generateChapter(story.story_id, chapter.number);\n      if (result.success) {\n        // Reload chapter data\n        await loadChapterData(story.story_id, chapter.number);\n      }\n    } catch (error) {\n      console.error('Failed to generate chapter:', error);\n    } finally {\n      setGenerating(false);\n    }\n  };\n\n  const wordCount = editedContent ? editedContent.split(/\\s+/).filter(word => word.length > 0).length : 0;\n\n  if (loading) {\n    return (\n      <Container>\n        <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n          <CircularProgress />\n        </Box>\n      </Container>\n    );\n  }\n\n  if (!story || !chapter) {\n    return (\n      <Container>\n        <Alert severity=\"error\" sx={{ mt: 4 }}>\n          Chapter not found\n        </Alert>\n      </Container>\n    );\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Box sx={{ mt: 4, mb: 4 }}>\n        {/* Header */}\n        <Box sx={{ mb: 4 }}>\n          <Button\n            startIcon={<ArrowBack />}\n            onClick={() => navigate(`/stories/${story.story_id}`)}\n            sx={{ mb: 2 }}\n          >\n            Back to Story\n          </Button>\n          \n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Chapter {chapter.number}: {chapter.title}\n          </Typography>\n          \n          <Box sx={{ display: 'flex', gap: 1, mb: 2 }}>\n            {chapter.is_generated && (\n              <Chip label=\"AI Generated\" color=\"success\" size=\"small\" />\n            )}\n            {chapter.is_approved && (\n              <Chip label=\"Approved\" color=\"primary\" size=\"small\" />\n            )}\n          </Box>\n          \n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            {chapter.summary}\n          </Typography>\n        </Box>\n\n        <Grid container spacing={3}>\n          {/* Main Editor */}\n          <Grid item xs={12} md={9}>\n            <Paper sx={{ p: 3 }}>\n              {/* Toolbar */}\n              <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n                <Typography variant=\"h6\">\n                  Content ({wordCount} words)\n                </Typography>\n                \n                <Box sx={{ display: 'flex', gap: 1 }}>\n                  {!chapter.content && (\n                    <Button\n                      variant=\"contained\"\n                      startIcon={<AutoAwesome />}\n                      onClick={handleGenerate}\n                      disabled={generating}\n                    >\n                      {generating ? 'Generating...' : 'Generate with AI'}\n                    </Button>\n                  )}\n                  \n                  {chapter.content && !editMode && (\n                    <Button\n                      variant=\"outlined\"\n                      startIcon={<Edit />}\n                      onClick={() => setEditMode(true)}\n                    >\n                      Edit\n                    </Button>\n                  )}\n                  \n                  {editMode && (\n                    <>\n                      <Button\n                        variant=\"outlined\"\n                        onClick={() => {\n                          setEditMode(false);\n                          setEditedContent(chapter.content || '');\n                        }}\n                      >\n                        Cancel\n                      </Button>\n                      <Button\n                        variant=\"contained\"\n                        startIcon={<Save />}\n                        onClick={handleSave}\n                        disabled={saving}\n                      >\n                        {saving ? 'Saving...' : 'Save'}\n                      </Button>\n                    </>\n                  )}\n                </Box>\n              </Box>\n              \n              <Divider sx={{ mb: 3 }} />\n              \n              {/* Content Area */}\n              {!chapter.content && !generating ? (\n                <Box sx={{ textAlign: 'center', py: 8 }}>\n                  <Typography variant=\"h6\" color=\"text.secondary\" gutterBottom>\n                    No content yet\n                  </Typography>\n                  <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 3 }}>\n                    Generate AI content or start writing manually\n                  </Typography>\n                  <Button\n                    variant=\"contained\"\n                    startIcon={<AutoAwesome />}\n                    onClick={handleGenerate}\n                    disabled={generating}\n                  >\n                    Generate with AI\n                  </Button>\n                </Box>\n              ) : editMode ? (\n                <TextField\n                  fullWidth\n                  multiline\n                  rows={20}\n                  value={editedContent}\n                  onChange={(e) => setEditedContent(e.target.value)}\n                  placeholder=\"Start writing your chapter...\"\n                  variant=\"outlined\"\n                  sx={{\n                    '& .MuiOutlinedInput-root': {\n                      fontFamily: '\"Georgia\", serif',\n                      fontSize: '16px',\n                      lineHeight: 1.6,\n                    },\n                  }}\n                />\n              ) : (\n                <Box\n                  sx={{\n                    fontFamily: '\"Georgia\", serif',\n                    fontSize: '16px',\n                    lineHeight: 1.8,\n                    whiteSpace: 'pre-wrap',\n                    minHeight: '400px',\n                  }}\n                >\n                  {chapter.content}\n                </Box>\n              )}\n            </Paper>\n          </Grid>\n\n          {/* Sidebar */}\n          <Grid item xs={12} md={3}>\n            <Card>\n              <CardContent>\n                <Typography variant=\"h6\" gutterBottom>\n                  Chapter Info\n                </Typography>\n                \n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Word Count\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {chapter.word_count || wordCount}\n                  </Typography>\n                </Box>\n                \n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Status\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {chapter.is_generated ? 'Generated' : 'Draft'}\n                  </Typography>\n                </Box>\n                \n                <Box sx={{ mb: 2 }}>\n                  <Typography variant=\"caption\" color=\"text.secondary\">\n                    Last Updated\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {chapter.updated_at ? new Date(chapter.updated_at).toLocaleDateString() : 'Never'}\n                  </Typography>\n                </Box>\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </Container>\n  );\n};\n\nexport default ChapterEditor;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,kBAAkB;AACzD,SACEC,SAAS,EACTC,UAAU,EACVC,GAAG,EACHC,KAAK,EACLC,SAAS,EACTC,MAAM,EACNC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,IAAI,EACJC,KAAK,EACLC,gBAAgB,EAChBC,OAAO,QACF,eAAe;AACtB,SACEC,IAAI,EACJC,WAAW,EACXC,SAAS,EACTC,IAAI,QAEC,qBAAqB;AAC5B,SAASC,QAAQ,EAAEC,aAAa,QAAwB,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1E,MAAMC,aAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAM;IAAEC,EAAE;IAAEC;EAAc,CAAC,GAAG5B,SAAS,CAAwC,CAAC;EAChF,MAAM6B,QAAQ,GAAG5B,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAe,IAAI,CAAC;EACtD,MAAM,CAACkC,OAAO,EAAEC,UAAU,CAAC,GAAGnC,QAAQ,CAAiB,IAAI,CAAC;EAC5D,MAAM,CAACoC,OAAO,EAAEC,UAAU,CAAC,GAAGrC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsC,MAAM,EAAEC,SAAS,CAAC,GAAGvC,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACwC,UAAU,EAAEC,aAAa,CAAC,GAAGzC,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC0C,QAAQ,EAAEC,WAAW,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC4C,aAAa,EAAEC,gBAAgB,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd,IAAI4B,EAAE,IAAIC,aAAa,EAAE;MACvBgB,eAAe,CAACC,QAAQ,CAAClB,EAAE,CAAC,EAAEkB,QAAQ,CAACjB,aAAa,CAAC,CAAC;IACxD;EACF,CAAC,EAAE,CAACD,EAAE,EAAEC,aAAa,CAAC,CAAC;EAEvB,MAAMgB,eAAe,GAAG,MAAAA,CAAOE,OAAe,EAAEC,UAAkB,KAAK;IACrE,IAAI;MACF,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,CACjDhC,QAAQ,CAACiC,QAAQ,CAACN,OAAO,CAAC,EAC1B3B,QAAQ,CAACkC,UAAU,CAACP,OAAO,EAAEC,UAAU,CAAC,CACzC,CAAC;MACFhB,QAAQ,CAACiB,SAAS,CAAC;MACnBf,UAAU,CAACgB,WAAW,CAAC;MACvBN,gBAAgB,CAACM,WAAW,CAACK,OAAO,IAAI,EAAE,CAAC;IAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACtD,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAAC3B,KAAK,IAAI,CAACE,OAAO,EAAE;IAExBK,SAAS,CAAC,IAAI,CAAC;IACf,IAAI;MACF,MAAMqB,cAAc,GAAG,MAAMvC,QAAQ,CAACwC,aAAa,CACjD7B,KAAK,CAAC8B,QAAQ,EACd5B,OAAO,CAAC6B,MAAM,EACd;QAAEP,OAAO,EAAEZ;MAAc,CAC3B,CAAC;MACDT,UAAU,CAACyB,cAAc,CAAC;MAC1BjB,WAAW,CAAC,KAAK,CAAC;IACpB,CAAC,CAAC,OAAOc,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,SAAS;MACRlB,SAAS,CAAC,KAAK,CAAC;IAClB;EACF,CAAC;EAED,MAAMyB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAAChC,KAAK,IAAI,CAACE,OAAO,EAAE;IAExBO,aAAa,CAAC,IAAI,CAAC;IACnB,IAAI;MACF,MAAMwB,MAAM,GAAG,MAAM3C,aAAa,CAAC4C,eAAe,CAAClC,KAAK,CAAC8B,QAAQ,EAAE5B,OAAO,CAAC6B,MAAM,CAAC;MAClF,IAAIE,MAAM,CAACE,OAAO,EAAE;QAClB;QACA,MAAMrB,eAAe,CAACd,KAAK,CAAC8B,QAAQ,EAAE5B,OAAO,CAAC6B,MAAM,CAAC;MACvD;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,SAAS;MACRhB,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAM2B,SAAS,GAAGxB,aAAa,GAAGA,aAAa,CAACyB,KAAK,CAAC,KAAK,CAAC,CAACC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAACA,MAAM,GAAG,CAAC;EAEvG,IAAIpC,OAAO,EAAE;IACX,oBACEZ,OAAA,CAACpB,SAAS;MAAAqE,QAAA,eACRjD,OAAA,CAAClB,GAAG;QAACoE,EAAE,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,cAAc,EAAE,QAAQ;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAAJ,QAAA,eAC5DjD,OAAA,CAACT,gBAAgB;UAAA+D,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAEhB;EAEA,IAAI,CAACjD,KAAK,IAAI,CAACE,OAAO,EAAE;IACtB,oBACEV,OAAA,CAACpB,SAAS;MAAAqE,QAAA,eACRjD,OAAA,CAACV,KAAK;QAACoE,QAAQ,EAAC,OAAO;QAACR,EAAE,EAAE;UAAEG,EAAE,EAAE;QAAE,CAAE;QAAAJ,QAAA,EAAC;MAEvC;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEhB;EAEA,oBACEzD,OAAA,CAACpB,SAAS;IAAC+E,QAAQ,EAAC,IAAI;IAAAV,QAAA,eACtBjD,OAAA,CAAClB,GAAG;MAACoE,EAAE,EAAE;QAAEG,EAAE,EAAE,CAAC;QAAEO,EAAE,EAAE;MAAE,CAAE;MAAAX,QAAA,gBAExBjD,OAAA,CAAClB,GAAG;QAACoE,EAAE,EAAE;UAAEU,EAAE,EAAE;QAAE,CAAE;QAAAX,QAAA,gBACjBjD,OAAA,CAACf,MAAM;UACL4E,SAAS,eAAE7D,OAAA,CAACL,SAAS;YAAA2D,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAE;UACzBK,OAAO,EAAEA,CAAA,KAAMvD,QAAQ,CAAC,YAAYC,KAAK,CAAC8B,QAAQ,EAAE,CAAE;UACtDY,EAAE,EAAE;YAAEU,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,EACf;QAED;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETzD,OAAA,CAACnB,UAAU;UAACkF,OAAO,EAAC,IAAI;UAACC,SAAS,EAAC,IAAI;UAACC,YAAY;UAAAhB,QAAA,GAAC,UAC3C,EAACvC,OAAO,CAAC6B,MAAM,EAAC,IAAE,EAAC7B,OAAO,CAACwD,KAAK;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eAEbzD,OAAA,CAAClB,GAAG;UAACoE,EAAE,EAAE;YAAEC,OAAO,EAAE,MAAM;YAAEgB,GAAG,EAAE,CAAC;YAAEP,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,GACzCvC,OAAO,CAAC0D,YAAY,iBACnBpE,OAAA,CAACX,IAAI;YAACgF,KAAK,EAAC,cAAc;YAACC,KAAK,EAAC,SAAS;YAACC,IAAI,EAAC;UAAO;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAC1D,EACA/C,OAAO,CAAC8D,WAAW,iBAClBxE,OAAA,CAACX,IAAI;YAACgF,KAAK,EAAC,UAAU;YAACC,KAAK,EAAC,SAAS;YAACC,IAAI,EAAC;UAAO;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CACtD;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAENzD,OAAA,CAACnB,UAAU;UAACkF,OAAO,EAAC,OAAO;UAACO,KAAK,EAAC,gBAAgB;UAACpB,EAAE,EAAE;YAAEU,EAAE,EAAE;UAAE,CAAE;UAAAX,QAAA,EAC9DvC,OAAO,CAAC+D;QAAO;UAAAnB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,eAENzD,OAAA,CAACd,IAAI;QAACwF,SAAS;QAACC,OAAO,EAAE,CAAE;QAAA1B,QAAA,gBAEzBjD,OAAA,CAACd,IAAI;UAAC0F,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAA7B,QAAA,eACvBjD,OAAA,CAACjB,KAAK;YAACmE,EAAE,EAAE;cAAE6B,CAAC,EAAE;YAAE,CAAE;YAAA9B,QAAA,gBAElBjD,OAAA,CAAClB,GAAG;cAACoE,EAAE,EAAE;gBAAEC,OAAO,EAAE,MAAM;gBAAEC,cAAc,EAAE,eAAe;gBAAE4B,UAAU,EAAE,QAAQ;gBAAEpB,EAAE,EAAE;cAAE,CAAE;cAAAX,QAAA,gBACzFjD,OAAA,CAACnB,UAAU;gBAACkF,OAAO,EAAC,IAAI;gBAAAd,QAAA,GAAC,WACd,EAACL,SAAS,EAAC,SACtB;cAAA;gBAAAU,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAEbzD,OAAA,CAAClB,GAAG;gBAACoE,EAAE,EAAE;kBAAEC,OAAO,EAAE,MAAM;kBAAEgB,GAAG,EAAE;gBAAE,CAAE;gBAAAlB,QAAA,GAClC,CAACvC,OAAO,CAACsB,OAAO,iBACfhC,OAAA,CAACf,MAAM;kBACL8E,OAAO,EAAC,WAAW;kBACnBF,SAAS,eAAE7D,OAAA,CAACN,WAAW;oBAAA4D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAE;kBAC3BK,OAAO,EAAEtB,cAAe;kBACxByC,QAAQ,EAAEjE,UAAW;kBAAAiC,QAAA,EAEpBjC,UAAU,GAAG,eAAe,GAAG;gBAAkB;kBAAAsC,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAC5C,CACT,EAEA/C,OAAO,CAACsB,OAAO,IAAI,CAACd,QAAQ,iBAC3BlB,OAAA,CAACf,MAAM;kBACL8E,OAAO,EAAC,UAAU;kBAClBF,SAAS,eAAE7D,OAAA,CAACJ,IAAI;oBAAA0D,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAE,CAAE;kBACpBK,OAAO,EAAEA,CAAA,KAAM3C,WAAW,CAAC,IAAI,CAAE;kBAAA8B,QAAA,EAClC;gBAED;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CACT,EAEAvC,QAAQ,iBACPlB,OAAA,CAAAE,SAAA;kBAAA+C,QAAA,gBACEjD,OAAA,CAACf,MAAM;oBACL8E,OAAO,EAAC,UAAU;oBAClBD,OAAO,EAAEA,CAAA,KAAM;sBACb3C,WAAW,CAAC,KAAK,CAAC;sBAClBE,gBAAgB,CAACX,OAAO,CAACsB,OAAO,IAAI,EAAE,CAAC;oBACzC,CAAE;oBAAAiB,QAAA,EACH;kBAED;oBAAAK,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC,eACTzD,OAAA,CAACf,MAAM;oBACL8E,OAAO,EAAC,WAAW;oBACnBF,SAAS,eAAE7D,OAAA,CAACP,IAAI;sBAAA6D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE,CAAE;oBACpBK,OAAO,EAAE3B,UAAW;oBACpB8C,QAAQ,EAAEnE,MAAO;oBAAAmC,QAAA,EAEhBnC,MAAM,GAAG,WAAW,GAAG;kBAAM;oBAAAwC,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB,CAAC;gBAAA,eACT,CACH;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACE,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,eAENzD,OAAA,CAACR,OAAO;cAAC0D,EAAE,EAAE;gBAAEU,EAAE,EAAE;cAAE;YAAE;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,EAGzB,CAAC/C,OAAO,CAACsB,OAAO,IAAI,CAAChB,UAAU,gBAC9BhB,OAAA,CAAClB,GAAG;cAACoE,EAAE,EAAE;gBAAEgC,SAAS,EAAE,QAAQ;gBAAEC,EAAE,EAAE;cAAE,CAAE;cAAAlC,QAAA,gBACtCjD,OAAA,CAACnB,UAAU;gBAACkF,OAAO,EAAC,IAAI;gBAACO,KAAK,EAAC,gBAAgB;gBAACL,YAAY;gBAAAhB,QAAA,EAAC;cAE7D;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbzD,OAAA,CAACnB,UAAU;gBAACkF,OAAO,EAAC,OAAO;gBAACO,KAAK,EAAC,gBAAgB;gBAACpB,EAAE,EAAE;kBAAEU,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,EAAC;cAElE;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eACbzD,OAAA,CAACf,MAAM;gBACL8E,OAAO,EAAC,WAAW;gBACnBF,SAAS,eAAE7D,OAAA,CAACN,WAAW;kBAAA4D,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE,CAAE;gBAC3BK,OAAO,EAAEtB,cAAe;gBACxByC,QAAQ,EAAEjE,UAAW;gBAAAiC,QAAA,EACtB;cAED;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACN,CAAC,GACJvC,QAAQ,gBACVlB,OAAA,CAAChB,SAAS;cACRoG,SAAS;cACTC,SAAS;cACTC,IAAI,EAAE,EAAG;cACTC,KAAK,EAAEnE,aAAc;cACrBoE,QAAQ,EAAGC,CAAC,IAAKpE,gBAAgB,CAACoE,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAClDI,WAAW,EAAC,+BAA+B;cAC3C5B,OAAO,EAAC,UAAU;cAClBb,EAAE,EAAE;gBACF,0BAA0B,EAAE;kBAC1B0C,UAAU,EAAE,kBAAkB;kBAC9BC,QAAQ,EAAE,MAAM;kBAChBC,UAAU,EAAE;gBACd;cACF;YAAE;cAAAxC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC,gBAEFzD,OAAA,CAAClB,GAAG;cACFoE,EAAE,EAAE;gBACF0C,UAAU,EAAE,kBAAkB;gBAC9BC,QAAQ,EAAE,MAAM;gBAChBC,UAAU,EAAE,GAAG;gBACfC,UAAU,EAAE,UAAU;gBACtBC,SAAS,EAAE;cACb,CAAE;cAAA/C,QAAA,EAEDvC,OAAO,CAACsB;YAAO;cAAAsB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACb,CACN;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eAGPzD,OAAA,CAACd,IAAI;UAAC0F,IAAI;UAACC,EAAE,EAAE,EAAG;UAACC,EAAE,EAAE,CAAE;UAAA7B,QAAA,eACvBjD,OAAA,CAACb,IAAI;YAAA8D,QAAA,eACHjD,OAAA,CAACZ,WAAW;cAAA6D,QAAA,gBACVjD,OAAA,CAACnB,UAAU;gBAACkF,OAAO,EAAC,IAAI;gBAACE,YAAY;gBAAAhB,QAAA,EAAC;cAEtC;gBAAAK,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAY,CAAC,eAEbzD,OAAA,CAAClB,GAAG;gBAACoE,EAAE,EAAE;kBAAEU,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,gBACjBjD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,SAAS;kBAACO,KAAK,EAAC,gBAAgB;kBAAArB,QAAA,EAAC;gBAErD;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACbzD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,OAAO;kBAAAd,QAAA,EACxBvC,OAAO,CAACuF,UAAU,IAAIrD;gBAAS;kBAAAU,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACtB,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAENzD,OAAA,CAAClB,GAAG;gBAACoE,EAAE,EAAE;kBAAEU,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,gBACjBjD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,SAAS;kBAACO,KAAK,EAAC,gBAAgB;kBAAArB,QAAA,EAAC;gBAErD;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACbzD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,OAAO;kBAAAd,QAAA,EACxBvC,OAAO,CAAC0D,YAAY,GAAG,WAAW,GAAG;gBAAO;kBAAAd,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACnC,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC,eAENzD,OAAA,CAAClB,GAAG;gBAACoE,EAAE,EAAE;kBAAEU,EAAE,EAAE;gBAAE,CAAE;gBAAAX,QAAA,gBACjBjD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,SAAS;kBAACO,KAAK,EAAC,gBAAgB;kBAAArB,QAAA,EAAC;gBAErD;kBAAAK,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAY,CAAC,eACbzD,OAAA,CAACnB,UAAU;kBAACkF,OAAO,EAAC,OAAO;kBAAAd,QAAA,EACxBvC,OAAO,CAACwF,UAAU,GAAG,IAAIC,IAAI,CAACzF,OAAO,CAACwF,UAAU,CAAC,CAACE,kBAAkB,CAAC,CAAC,GAAG;gBAAO;kBAAA9C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACvE,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACV,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACK;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACG,CAAC;AAEhB,CAAC;AAACrD,EAAA,CAhRID,aAAuB;EAAA,QACGzB,SAAS,EACtBC,WAAW;AAAA;AAAA0H,EAAA,GAFxBlG,aAAuB;AAkR7B,eAAeA,aAAa;AAAC,IAAAkG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}